<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Geek In The Shell</title>
    <link>https://tgits.github.io/post/</link>
    <description>Recent content in Posts on The Geek In The Shell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Wed, 16 Feb 2022 17:42:21 +0100</lastBuildDate>
    
	<atom:link href="https://tgits.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Developer Notes : Jshell</title>
      <link>https://tgits.github.io/post/quick-developer-notes-jshell/</link>
      <pubDate>Wed, 16 Feb 2022 17:42:21 +0100</pubDate>
      
      <guid>https://tgits.github.io/post/quick-developer-notes-jshell/</guid>
      <description>Besoin Vous avez besoin de tester ou d&amp;rsquo;expérimenter rapidement un bout de code Java et l&amp;rsquo;idéal serait d&amp;rsquo;avoir une REPL pour Java&amp;hellip; Cela tombe bien il y en a une depuis le JDK 9 ! Reste maintenant à connaître les commandes de base pour commencer à l&amp;rsquo;utiliser : c&amp;rsquo;est l&amp;rsquo;objet de ce billet qui est un petit aide-mémoire sur les options et les commandes de base.
Lancement L&amp;rsquo;outil jshell fait partie des binaires distribués dans votre JDK et devait être dans le PATH si java et javac le sont.</description>
    </item>
    
    <item>
      <title>Quick Developer Notes : changer l&#39;encodage de caractères dans la console DOS</title>
      <link>https://tgits.github.io/post/quick-developer-notes-encoding-console/</link>
      <pubDate>Sun, 23 Jan 2022 11:20:41 +0100</pubDate>
      
      <guid>https://tgits.github.io/post/quick-developer-notes-encoding-console/</guid>
      <description>Problématique Récemment en travaillant sur un autre billet de blog, en utilisant JShell sous une invite de commande DOS, j&amp;rsquo;ai exécuté du code avec des affichages de texte qui contenaient des caractères accentuées.
Cela donnait ce qui suit :
Bref, ce n&amp;rsquo;est pas terrible, les caractères accentués ne sont pas correctement traduits même si c&amp;rsquo;est normal quand on y pense. En effet, l&amp;rsquo;encodage de caractère par défaut de l&amp;rsquo;invite de commandes n&amp;rsquo;est probablement pas adapté.</description>
    </item>
    
    <item>
      <title>Notes d&#39;apprentissage de Python : traitement des séquences avec un style fonctionnel - flatmap</title>
      <link>https://tgits.github.io/post/notes_apprentissage_python_tssf_flatmap/</link>
      <pubDate>Fri, 07 May 2021 14:27:47 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/notes_apprentissage_python_tssf_flatmap/</guid>
      <description>Contexte Ce billet s&amp;rsquo;inscrit dans une série de billets sur le traitement des séquences avec un style fonctionnel en Python.
NB : La version de Python utilisée dans les exemples de code est la version 3.
Pour pleinement profiter de ce billet, il faut que vous connaissiez déjà le fonctionnement de map et reduce en Python ou que vous lisiez d&amp;rsquo;abord les billets que j&amp;rsquo;ai écrit sur l&amp;rsquo;un et l&amp;rsquo;autre.</description>
    </item>
    
    <item>
      <title>Notes d&#39;apprentissage de Python : traitement des séquences avec un style fonctionnel - reduce</title>
      <link>https://tgits.github.io/post/notes_apprentissage_python_tssf_reduce/</link>
      <pubDate>Fri, 07 May 2021 14:27:46 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/notes_apprentissage_python_tssf_reduce/</guid>
      <description>Contexte Ce billet s&amp;rsquo;inscrit dans une série de billets sur le traitement des séquences avec un style fonctionnel en Python.
NB : La version de Python utilisée dans les exemples de code est la version 3.
Principe Comme filter et map, la fonction reduce transforme une séquence qui lui est fourni en paramètre grâce à une fonction qui lui est également fournie en paramètre en parcourant la séquence de la gauche vers la droite.</description>
    </item>
    
    <item>
      <title>Notes d&#39;apprentissage de Python : traitement des séquences avec un style fonctionnel - map</title>
      <link>https://tgits.github.io/post/notes_apprentissage_python_tssf_map/</link>
      <pubDate>Fri, 07 May 2021 14:27:45 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/notes_apprentissage_python_tssf_map/</guid>
      <description>Contexte Ce billet s&amp;rsquo;inscrit dans une série de billets sur le traitement des séquences avec un style fonctionnel en Python.
NB1 : La version de Python utilisée dans les exemples de code est la version 3.
NB2 : Ce billet a été modifié le 24/05/2021, par l&amp;rsquo;ajout d&amp;rsquo;un paragraphe sur le comportement de map avec plusieurs itérables.
Principe La fonction map est native tout comme filter et prend également en paramètre une fonction et une séquence d&amp;rsquo;éléments.</description>
    </item>
    
    <item>
      <title>Notes d&#39;apprentissage de Python : traitement des séquences avec un style fonctionnel - filter</title>
      <link>https://tgits.github.io/post/notes_apprentissage_python_tssf_filter/</link>
      <pubDate>Fri, 07 May 2021 14:27:44 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/notes_apprentissage_python_tssf_filter/</guid>
      <description>Contexte Ce billet s&amp;rsquo;inscrit dans une série de billets sur le traitement des séquences avec un style fonctionnel en Python.
NB : La version de Python utilisée dans les exemples de code est la version 3.
Principe La fonction filter est native et prend en paramètre une fonction et une séquence d&amp;rsquo;éléments ; elle retourne un objet iterator.
La fonction doit prendre un paramètre dont le type correspond aux éléments de la séquence et retourne un booléen (on peut parler de fonction prédicat ou de prédicat).</description>
    </item>
    
    <item>
      <title>Notes d&#39;apprentissage de Python : traitement des séquences avec un style fonctionnel</title>
      <link>https://tgits.github.io/post/notes_apprentissage_python_traiter_sequences_avec_style_fonctionnel/</link>
      <pubDate>Fri, 07 May 2021 14:27:42 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/notes_apprentissage_python_traiter_sequences_avec_style_fonctionnel/</guid>
      <description>Contexte Python est un langage de programmation très abordable que l&amp;rsquo;on démarre en programmation ou que l&amp;rsquo;on connaisse déjà d&amp;rsquo;autres langages. Néanmoins, ce n&amp;rsquo;est pas parce qu&amp;rsquo;un langage est abordable qu&amp;rsquo;il n&amp;rsquo;a pas ses propres idiomes et qu&amp;rsquo;il n&amp;rsquo;y a pas des trucs &amp;amp; astuces à connaître et à retenir.
Ce billet est l&amp;rsquo;introduction d&amp;rsquo;une série de notes d&amp;rsquo;apprentissage de Python, sur la manière de traiter les séquences en Python dans un style fonctionnel.</description>
    </item>
    
    <item>
      <title>Notes d&#39;apprentissage de Python : zip et unzip</title>
      <link>https://tgits.github.io/post/notes_apprentissage_python_zip/</link>
      <pubDate>Sun, 22 Nov 2020 18:27:43 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/notes_apprentissage_python_zip/</guid>
      <description>Contexte Python est un langage de programmation très abordable que l&amp;rsquo;on démarre en programmation ou que l&amp;rsquo;on connaisse déjà d&amp;rsquo;autres langages. Néanmoins, ce n&amp;rsquo;est pas parce qu&amp;rsquo;un langage est abordable qu&amp;rsquo;il n&amp;rsquo;a pas ses propres idiomes et qu&amp;rsquo;il n&amp;rsquo;y a pas des trucs &amp;amp; astuces à connaître et à retenir.
Ci-après, une petite note d&amp;rsquo;apprentissage de Python, sur la fonction zip. Il faut noter que c&amp;rsquo;est un billet relativement court, je l&amp;rsquo;ai un peu compressé !</description>
    </item>
    
    <item>
      <title>Notes d&#39;apprentissage de Python : les compréhensions</title>
      <link>https://tgits.github.io/post/notes_apprentissage_python_comprehension/</link>
      <pubDate>Sat, 31 Oct 2020 14:27:43 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/notes_apprentissage_python_comprehension/</guid>
      <description>Contexte Python est un langage de programmation très abordable que l&amp;rsquo;on démarre en programmation ou que l&amp;rsquo;on connaisse déjà d&amp;rsquo;autres langages. Néanmoins, ce n&amp;rsquo;est pas parce qu&amp;rsquo;un langage est abordable qu&amp;rsquo;il n&amp;rsquo;a pas ses propres idiomes et qu&amp;rsquo;il n&amp;rsquo;y a pas des trucs &amp;amp; astuces à connaître et à retenir.
Ci-après, une petite note d&amp;rsquo;apprentissage de Python, sur les compréhensions en Python.
NB : c&amp;rsquo;est du Python 3 qui est utilisé.</description>
    </item>
    
    <item>
      <title>Notes apprentissage : une séquence renversante</title>
      <link>https://tgits.github.io/post/notes_apprentissage_python_reverse_sequence/</link>
      <pubDate>Wed, 21 Oct 2020 18:13:27 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/notes_apprentissage_python_reverse_sequence/</guid>
      <description>Contexte Python est un langage de programmation très abordable que l&amp;rsquo;on démarre en programmation ou que l&amp;rsquo;on connaisse déjà d&amp;rsquo;autres langages. Néanmoins, ce n&amp;rsquo;est pas parce qu&amp;rsquo;un langage est abordable qu&amp;rsquo;il n&amp;rsquo;a pas ses propres idiomes et qu&amp;rsquo;il n&amp;rsquo;y a pas des trucs &amp;amp; astuces à connaître et à retenir.
Ci-après, une petite note d&amp;rsquo;apprentissage de Python, sur la manière d&amp;rsquo;inverser les éléments d&amp;rsquo;une liste et d&amp;rsquo;une chaine de caractères.</description>
    </item>
    
    <item>
      <title>Notes d&#39;apprentissage de Python : les boucles for et enumerate</title>
      <link>https://tgits.github.io/post/notes_apprentissage_python_enumerate/</link>
      <pubDate>Wed, 21 Oct 2020 18:13:27 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/notes_apprentissage_python_enumerate/</guid>
      <description>Contexte Python est un langage de programmation très abordable que l&amp;rsquo;on démarre en programmation ou que l&amp;rsquo;on connaisse déjà d&amp;rsquo;autres langages. Néanmoins, ce n&amp;rsquo;est pas parce qu&amp;rsquo;un langage est abordable qu&amp;rsquo;il n&amp;rsquo;a pas ses propres idiomes et qu&amp;rsquo;il n&amp;rsquo;y a pas des trucs &amp;amp; astuces à connaître et à retenir.
Ci-après, une petite note d&amp;rsquo;apprentissage de Python, sur l&amp;rsquo;utilisation de enumerate.
NB : c&amp;rsquo;est du Python 3 qui est utilisé.</description>
    </item>
    
    <item>
      <title>Apprendre à coder à son enfant, premier REX</title>
      <link>https://tgits.github.io/post/apprendre_a_coder_a_son_enfant_premier_rex/</link>
      <pubDate>Mon, 19 Oct 2020 12:09:27 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/apprendre_a_coder_a_son_enfant_premier_rex/</guid>
      <description>Introduction Depuis la fin Août 2020, j&amp;rsquo;ai commencé à apprendre à mon fils à coder. Ce billet est un premier retour d&amp;rsquo;expérience sur cette apprentissage après presque 2 mois. L&amp;rsquo;occasion de faire le point, prendre du recul, de partager cela avec d&amp;rsquo;autres informaticiens ou informaticiennes qui seraient dans une démarche similaire et idéalement de pouvoir avoir un échange sur le sujet.
Contexte Mon fils a 11 ans, il vient d&amp;rsquo;entrer en 5ème au collège.</description>
    </item>
    
    <item>
      <title>Tableau de fréquences en Python</title>
      <link>https://tgits.github.io/post/frequencies_map_in_python/</link>
      <pubDate>Sat, 03 Oct 2020 12:01:23 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/frequencies_map_in_python/</guid>
      <description>Il y a quelques temps j&amp;rsquo;ai publié un billet sur les tableaux de fréquences en Java avec les streams. Faisant un peu de Python en ce moment, je me suis demandé comment je pouvais le faire en Python de manière idiomatique (ou du moins d&amp;rsquo;une manière qui me semble idiomatique en Python).
Pour rappel, je traduis ici par tableau de fréquences l&amp;rsquo;expression anglaise de frequencies map. Vous avez une liste d&amp;rsquo;éléments et vous voulez pour chaque élément connaître sa fréquence (le nombre de fois où cet élément est présent dans cette liste).</description>
    </item>
    
    <item>
      <title>Aventure de vacances : Elixir</title>
      <link>https://tgits.github.io/post/aventure-vacances-elixir/</link>
      <pubDate>Sat, 12 Sep 2020 15:46:52 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/aventure-vacances-elixir/</guid>
      <description>Prologue Ce billet n&amp;rsquo;est pas un article d&amp;rsquo;introduction à Elixir. C&amp;rsquo;est juste un billet dans lequel je partage mon expérience et mon ressenti, sur un travail de veille sur Elixir cet été. Ce billet est également l&amp;rsquo;occasion de prendre du recul sur l&amp;rsquo;apprentissage de technologies qui peuvent être considérées comme exotique par rapport aux technologies que l&amp;rsquo;on utilise plus couramment en entreprise.
A la recherche de la pierre philosophale J&amp;rsquo;ai profité de l&amp;rsquo;été et des périodes de congés qui allaient avec pour regarder un peu le langage Elixir.</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 22 au 28 juin 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200622/</link>
      <pubDate>Sun, 28 Jun 2020 11:48:10 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200622/</guid>
      <description>Une sélection des sujets qui ont marqué ma semaine ou autrement dit un extrait représentatif de ma bulle informationnelle.
Ecouté  Sur la thématique sécurité, 1 épisodes de Software Engineering Radio et 2 épisodes de NoLimitSecu  Dans l&amp;rsquo;épisode #383 de SER, Neil Madden, qui est en train d&amp;rsquo;écrire API Security in Action, est interviewé par Gavin Henry. Un épisode très dense et très riche. J&amp;rsquo;ai surtout retenu le modèle de menace STRIDE acronyme pour Spoofing, Tampering, Repudiation, Information disclosure, Denial of service, Elevation of privilege et que sur le site de l&amp;rsquo;OWASP il y a plusieurs Cheat Sheets intéressantes dont celle-ci sur le Logging.</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 15 au 21 juin 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200615/</link>
      <pubDate>Sun, 21 Jun 2020 17:23:17 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200615/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine (ou aurait dû) ! Comme le remarque mon collègue Thomas dans un billet, c&amp;rsquo;est représentatif de ma bulle informationnelle ! Vous êtes prévenus !
Ecouté  Plusieurs épisodes du Podcast HanselMinutes de Scott Hanselman  Red Teaming with Leron Gray : j&amp;rsquo;ai bien aimé la définition donnée pour la Red Team : Adversary Emulation (vers 1&#39;27&amp;rsquo;&#39;).</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 8 au 14 juin 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200608/</link>
      <pubDate>Sun, 14 Jun 2020 16:23:17 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200608/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine (ou aurait dû) ! Comme le remarque mon collègue Thomas dans un billet, c&amp;rsquo;est représentatif de ma bulle informationnelle ! Vous êtes prévenus !
Ecouté  J&amp;rsquo;ai particuièrement apprécié l&amp;rsquo;écoute de Unproven Tech with Sean Allen (et le transcript). Ce que j&amp;rsquo;ai trouvé intéressant est que ce podcast retrace le raisonnement autour du choix de l&amp;rsquo;outil approprié pour construire un outil avec des besoins et contraintes spécifiques.</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 1 au 7 juin 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200601/</link>
      <pubDate>Mon, 01 Jun 2020 16:23:17 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200601/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine (ou aurait dû) ! Comme le remarque mon collègue Thomas dans un billet, c&amp;rsquo;est représentatif de ma bulle informationnelle ! Vous êtes prévenus !
Ecouté  Un podcast de InfoQ avec Sam Newman sur les microservices que j&amp;rsquo;ai trouvé très intéressant. Il rappelle entre autre que les microservices sont des systèmes distribués, que les systèmes distribués cela introduit de la complexité et qu&amp;rsquo;il faut être sûr que l&amp;rsquo;on saura géré cette complexité et qu&amp;rsquo;on l&amp;rsquo;introduit pour de bonnes raisons.</description>
    </item>
    
    <item>
      <title>Suivre les décisions d&#39;architecture avec les ADR</title>
      <link>https://tgits.github.io/post/adr/</link>
      <pubDate>Mon, 01 Jun 2020 11:56:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/adr/</guid>
      <description>The Big Picture Les ADR (Architectural Decision Record) sont une documentation des décisions d’architecture que Michael Nygard a formalisée en 2011 dans un billet sur le blog de Relevance (devenu Cognitech depuis). Pour les lecteurs moins à l&amp;rsquo;aise avec la langue anglaise, je propose une traduction du billet en français sur un petit dépôt sur GitHub avec d&amp;rsquo;autres ressources sur les ADR en complément de cet article.
Cette documentation légère est adaptée à des projets agiles.</description>
    </item>
    
    <item>
      <title>Tableau de fréquences en Java avec les Streams</title>
      <link>https://tgits.github.io/post/frequencies_map/</link>
      <pubDate>Sun, 31 May 2020 11:53:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/frequencies_map/</guid>
      <description>Pour contextualiser, je traduis ici par tableau de fréquences l&amp;rsquo;expression anglaise de frequencies map.
Vous avez une liste d&amp;rsquo;éléments et vous voulez pour chaque élément connaître sa fréquence (le nombre de fois où il est présent dans cette liste) : ainsi à partir de cette liste d&amp;rsquo;éléments, vous désirez obtenir un tableau associatif dans lequel chaque clé est un élément de cet liste et est associé à sa fréquence dans la liste.</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 25 au 31 mai 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200525/</link>
      <pubDate>Sun, 31 May 2020 11:53:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200525/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine (ou aurait dû) ! Comme le remarque mon collègue Thomas dans un billet, c&amp;rsquo;est représentatif de ma bulle informationnelle ! Vous êtes prévenus !
Ecouté  L&amp;rsquo;épisode #270 sur la Typologie des Attaquants de NoLimitSecu était comme souvent intéressant (c&amp;rsquo;est un podcast très recommandable si vous vous intéressez à la sécurité, même si comme moi vous n&amp;rsquo;êtes pas un spécialiste mais que vous souhaitez vous faire une culture a minima sur ce sujet).</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 18 au 24 mai 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200518/</link>
      <pubDate>Sun, 24 May 2020 11:53:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200518/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine (ou aurait dû) ! Comme le remarque mon collègue Thomas dans un billet, c&amp;rsquo;est représentatif de ma bulle informationnelle !
Ecouté   Suite à un changement de matériel pour récupérer et consommer des podcasts (passage de l&amp;rsquo;utilisation de l&amp;rsquo;iPod à un téléphone), j&amp;rsquo;ai pris beaucoup de retard sur mon écoute des Castcodeurs, retard que j&amp;rsquo;ai commencé à rattraper dans le désordre :-)</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 11 au 17 mai 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200511/</link>
      <pubDate>Sun, 17 May 2020 11:53:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200511/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine (ou aurait dû) !
Ecouté   Interview de Christian Lehman dans le podcast C&amp;rsquo;est plus que de la SF.
 Je ne connaissais pas No passaran, le jeu et Christian Lehman, mais ce podcast m&amp;rsquo;a vraiment donné envie de lire ce livre (enfin cette trilogie) et de découvrir cet auteur. L&amp;rsquo;auteur est médecin en exercice, l&amp;rsquo;écriture est une activité qu&amp;rsquo;il pratique en plus.</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 4 au 10 mai 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200504/</link>
      <pubDate>Sun, 10 May 2020 11:53:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200504/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine (ou aurait dû) !
Ecouté   J&amp;rsquo;ai écouté pas mal de podcasts intéressants sur Python cette semaine :
  Episode #179 de PythonBytes avec comme invité Guido van Rossum himself ! Plusieurs pointeurs prometteurs
  missingno
   Messy datasets? Missing values? missingno provides a small toolset of flexible and easy-to-use missing data visualizations and utilities that allows you to get a quick visual summary of the completeness (or lack thereof) of your dataset.</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 27 avril 2020 au 3 mai 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200427/</link>
      <pubDate>Sun, 03 May 2020 11:53:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200427/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine ou aurait dû !
Ecouté  Une émission spéciale de La Méthode Scientifique : Comment penser la science après le Coronavirus Justin Richer sur OAuth2 par Software Engineering Radio Chasseur de Science, un nouveau Podcast de Futura Sciences, avec un premier épisode sur la quinine, l&amp;rsquo;ancêtre de la chloroquine. Très plaisant à écouter et instructif.</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 20 au 26 avril 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200420/</link>
      <pubDate>Sun, 26 Apr 2020 11:53:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200420/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine ou aurait dû !
Ecouté   L&amp;rsquo;épisode de SERadio avec Adam Barr sur la qualité du code
 Il faudra que j&amp;rsquo;acquiers et lise ce livre : https://mitpress.mit.edu/books/problem-software    https://corecursive.com/050-sam-ritchie-portal-abstractions/
 J&amp;rsquo;aurais aimé avoir entendu des podcasts de ce type avant de démarrer ma Math Sup, cela m&amp;rsquo;aurait aidé à comprendre l&amp;rsquo;utilité de l&amp;rsquo;algèbre !</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 13 au 19 avril 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200413/</link>
      <pubDate>Sun, 19 Apr 2020 11:53:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200413/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine ou aurait dû ! C&amp;rsquo;est un bon exercice à réaliser qui permet de mesurer à quel point sur tout ce que nous entendons, lisons, voyons au final on retient assez peu !
Ecouté  De l&amp;rsquo;épisode 405 de Software Engineering Radio sur les bonnes pratiques pour l&amp;rsquo;IaC (Infrastructure as Code), j&amp;rsquo;ai surtout retenu le concept de Yak Shaving.</description>
    </item>
    
    <item>
      <title>Veille pour la semaine du 06 au 12 avril 2020</title>
      <link>https://tgits.github.io/post/veille-semaine-20200406/</link>
      <pubDate>Sun, 12 Apr 2020 11:53:13 +0200</pubDate>
      
      <guid>https://tgits.github.io/post/veille-semaine-20200406/</guid>
      <description>Une sélection de ce que j&amp;rsquo;ai écouté, vu ou lu et qui a marqué ma semaine.
Ecouté Data science  Je ne suis pas un data scientist mais l&amp;rsquo;intelligence artificielle et le machine learning font partie de ces domaines qui m&amp;rsquo;ont toujours intéressé et sur lesquels j&amp;rsquo;essaie de garder une culture minimum. Le Podcast Linear Digressions est accessible au non-spécialiste et j&amp;rsquo;apprécie leur manière de discuter des sujets. Cette semaine, j&amp;rsquo;ai écouté l&amp;rsquo;épisode [Putting machine learning into a database](http://lineardigressions.</description>
    </item>
    
  </channel>
</rss>